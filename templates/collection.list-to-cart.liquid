{% paginate collection.products by 20 %}

{% include 'breadcrumb' %}
{% assign has_sidebar = false %}
{% if collection.all_tags.size > 0 %}
  {% assign has_sidebar = true %}
{% endif %}

<div class="grid grid-border collection-list">

  {% if has_sidebar %}
  <div class="grid-item large--one-fifth collection-filters" id="collectionFilters">
    {% include 'collection-sidebar' %}
  </div>
  {% endif %}

  <div class="grid-item{% if has_sidebar %} large--four-fifths grid-border--left{% endif %}">

    {% comment %}
      Different markup if description is set
    {% endcomment %}
    
    {% if collection.description != blank %}
      <header class="section-header">
        <h1 class="section-header--title">{{ collection.title }}</h1>
        <div class="rte rte--header">
          {{ collection.description }}
        </div>
      </header>
      <hr{% if has_sidebar %} class="hr--offset-left"{% endif %}>
      <div class="section-header">
        <div class="section-header--right">
          {% include 'collection-sorting' %}
          {% include 'collection-views' %}
          {% include 'toggle-filters' %}
        </div>
      </div>
    {% else %}
    <header class="section-header">
      <h1 class="section-header--title section-header--left">{{ collection.title }}</h1>
      <div class="section-header--right">
        {% include 'collection-sorting' %}
        {% include 'collection-views' %}
        {% include 'toggle-filters' %}
      </div>
    </header>
    {% endif %}

    <div class="grid-uniform">
      {% for product in collection.products %}
      {% include 'bold-set-prices' with product %}

        {% include 'product-list-to-cart-item' %}

      {% else %}

        <div class="grid-item">
          <p>{{ 'collections.general.no_matches' | t }}</p>
        </div>

      {% endfor %}

    </div>

  </div>

  {% if paginate.pages > 1 %}
  <div class="grid-item pagination-border-top">
    <div class="grid">
      <div class="grid-item{% if has_sidebar %} large--four-fifths push--large--one-fifth{% endif %}">
          <div class="text-center">
            {% include 'pagination-custom' %}
          </div>
      </div>
    </div>
  </div>
  {% endif %}

</div>

{% endpaginate %}

{% if collection.products_count > 0 %}
<script>
Shopify.itemsToAdd = [];
Shopify.addItemstoTheCart = function() {
  if (Shopify.itemsToAdd.length) {
    var item = Shopify.itemsToAdd.pop();
    $.ajax({
      url: '/cart/add',
      dataType: 'json',
      type: 'post',
      data: item,
      success: Shopify.addItemstoTheCart,
      error: Shopify.addItemstoTheCart
    });
  }
  else {
    window.location.href = '/cart';
  }
};


Shopify.addItemsEvent = function() {
  
  $('.add-to-cart-order-form').addClass('disabled').attr('disabled','disabled');

  Shopify.itemsToAdd = [];
    $('.quantity').each(function() {
      var quantity = parseInt($(this).val(), 10);
      if (quantity) {
        Shopify.itemsToAdd.push( { id: $(this).attr('data-id'), quantity: quantity } );
      }
    });     
    if (Shopify.itemsToAdd.length) {
      Shopify.addItemstoTheCart();
    }
    else {
      alert('All quantities are set to zero.');
      $('.add-to-cart-order-form').removeAttr('disabled').removeClass('disabled');
    }
}

jQuery(function($) {

  $('.show-variants').click(function(e) {
    e.preventDefault();

    var $this = $(this);
    var productId = $this.data("id");

    var variant = $('.variants').filter('[data-id=' + productId + ']');
    variant.toggle();
  });
  
  $("input").keypress(function(event) {
    if (event.which == 13) {
        event.preventDefault();
        Shopify.addItemsEvent();
    }
  });

  $('table .quantity:first').focus();
  
  $('.submit-order-form').click(function() {
    Shopify.addItemsEvent();
  });
});
</script>
{% endif %}
